type User {
  id: ID! @id
  facebookProviderId: String @unique
  googleProviderId: String @unique
  twitterProviderId: String @unique
  firstName: String!
  lastName: String!
  email: String! @unique
  position: Position
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type JournalClub {
  id: ID! @id
  article: String!
  resident: User! @relation(link: INLINE, name: "JournalClubToResident")
  evaluator: User! @relation(link: INLINE, name: "JournalClubToEvaluator")
  preceptor: User! @relation(link: INLINE, name: "JournalClubToPreceptor")
  background: CoreCompetency!
    @relation(link: INLINE, name: "JournalClubBackground", onDelete: CASCADE)
  methods: CoreCompetency! @relation(link: INLINE, name: "JournalClubToMethods", onDelete: CASCADE)
  results: CoreCompetency! @relation(link: INLINE, name: "JournalClubToResults", onDelete: CASCADE)
  understanding: CoreCompetency!
    @relation(link: INLINE, name: "JournalClubToUnderstanding", onDelete: CASCADE)
  analysis: CoreCompetency! @relation(link: INLINE, name: "JournalClubAnalysis", onDelete: CASCADE)
  application: CoreCompetency!
    @relation(link: INLINE, name: "JournalClubToApplication", onDelete: CASCADE)
  conclusions: CoreCompetency!
    @relation(link: INLINE, name: "JournalClubToConclusions", onDelete: CASCADE)
  clarity: CoreCompetency! @relation(link: INLINE, name: "JournalClubClarity", onDelete: CASCADE)
  organization: CoreCompetency!
    @relation(link: INLINE, name: "JournalClubToOrganization", onDelete: CASCADE)
  grammar: CoreCompetency! @relation(link: INLINE, name: "JournalClubGrammar", onDelete: CASCADE)
  responseToQuestions: CoreCompetency!
    @relation(link: INLINE, name: "JournalClubToResponseToQuestions", onDelete: CASCADE)
  knowsAudience: CoreCompetency!
    @relation(link: INLINE, name: "JournalClubToKnowsAudience", onDelete: CASCADE)
  audienceEngagement: CoreCompetency!
    @relation(link: INLINE, name: "JournalClubToAudienceEngagement", onDelete: CASCADE)
  overall: OverallCompetency!
    @relation(link: INLINE, name: "JournalClubToOverall", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type CoreCompetency {
  id: ID! @id
  competency: Core!
  comment: String
}

type OverallCompetency {
  id: ID! @id
  competency: Overall!
  comment: String
}

enum Position {
  PRECEPTOR
  RESIDENT
}

enum Core {
  NEEDS_IMPROVEMENT
  SATISFACTORY_PROGRESS
  ACHIEVED
  NOT_APPLICABLE
}

enum Overall {
  MEETS_EXPECTATIONS
  DOES_NOT_MEET_EXPECTATIONS
}
